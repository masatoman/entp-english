class n{static instance;settings;reminderTimeoutId=null;constructor(){this.settings=this.loadSettings()}static getInstance(){return n.instance||(n.instance=new n),n.instance}isSupported(){return"Notification"in window&&"serviceWorker"in navigator}getPermissionStatus(){return Notification.permission}async requestPermission(){if(!this.isSupported())throw new Error("Notifications are not supported in this browser");const i=await Notification.requestPermission();return console.log("Notification permission:",i),i}async showNotification(i){if(!this.isSupported())throw new Error("Notifications are not supported");if(Notification.permission!=="granted")throw new Error("Notification permission not granted");"serviceWorker"in navigator?await(await navigator.serviceWorker.ready).showNotification(i.title,{body:i.body,icon:i.icon||"/pwa-192x192.png",badge:i.badge||"/pwa-192x192.png",tag:i.tag||"default",requireInteraction:i.requireInteraction||!1,actions:i.actions||[]}):new Notification(i.title,{body:i.body,icon:i.icon||"/pwa-192x192.png",tag:i.tag||"default"})}scheduleDailyReminder(){if(this.clearDailyReminder(),!this.settings.dailyReminder||!this.settings.enabled)return;const[i,t]=this.settings.reminderTime.split(":").map(Number),s=new Date,e=new Date;e.setHours(i,t,0,0),e<=s&&e.setDate(e.getDate()+1);const r=e.getTime()-s.getTime();this.reminderTimeoutId=setTimeout(()=>{this.showNotification({title:"ENTP英語学習アプリ",body:"学習の時間です！今日も頑張りましょう 🎯",tag:"daily-reminder"}),this.scheduleDailyReminder()},r),console.log("Daily reminder scheduled for:",e)}clearDailyReminder(){this.reminderTimeoutId&&(clearTimeout(this.reminderTimeoutId),this.reminderTimeoutId=null)}async showStreakReminder(i){!this.settings.streakReminder||!this.settings.enabled||await this.showNotification({title:"連続学習記録更新！",body:`${i}日連続学習中です！この調子で頑張りましょう 🔥`,tag:"streak-reminder"})}async showAchievementNotification(i){!this.settings.achievementReminder||!this.settings.enabled||await this.showNotification({title:"実績解除！",body:`「${i}」を獲得しました！🎉`,tag:"achievement-notification"})}async showLearningReminder(){await this.showNotification({title:"学習リマインダー",body:"今日の学習はまだですか？少しでも進めましょう 📚",tag:"learning-reminder"})}updateSettings(i){this.settings={...this.settings,...i},this.saveSettings(),(i.dailyReminder!==void 0||i.reminderTime!==void 0||i.enabled!==void 0)&&this.scheduleDailyReminder()}getSettings(){return{...this.settings}}loadSettings(){const i={enabled:!1,dailyReminder:!1,reminderTime:"19:00",streakReminder:!0,achievementReminder:!0};try{const t=localStorage.getItem("notification-settings");if(t)return{...i,...JSON.parse(t)}}catch(t){console.error("Error loading notification settings:",t)}return i}saveSettings(){try{localStorage.setItem("notification-settings",JSON.stringify(this.settings))}catch(i){console.error("Error saving notification settings:",i)}}async testNotification(){await this.showNotification({title:"テスト通知",body:"プッシュ通知が正常に動作しています！",tag:"test-notification"})}}const o=n.getInstance();export{o as notificationManager};
